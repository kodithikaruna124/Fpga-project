// module 1 

module sqr_n(o,i); 
input [3:0]i; 
output [7:0]o; 
wire [3:0]k1; 
wire [3:0]k2; 
wire [3:0]k3; 
wire [5:0]k4,k5,k6; 
wire [6:0]k8; 
mul_2 case1(k1[3:0],i[3:2]); 
mul_2 case2(k2[3:0],i[1:0]); 
assign k3[3:0]=i[3:2]*i[1:0]; 
assign k4={1'b0,1'b0,k3[3:0]}; 
assign k5={1'b0,1'b0,k3[3:0]}; 
assign k6={k1[3:0],k2[3:2]}; 
csa case4(k4,k5,k6,k8); 
assign o={k8,k2[1:0]}; 
endmodule 

//module 2 

module mul_2(o,i); 
input [1:0]i; 
output [3:0]o; 
assign o=i*i; 
endmodule 
//module 3 
module csa(x,y,z,o); 
input [5:0]x,y,z; 
output [6:0]o; 
wire [5:0]k2,k3,k1; 
 cha case1(x[0],y[0],z[0],k1[0],k2[0]); 
 cha case2(x[1],y[1],z[1],k1[1],k2[1]); 
 cha case3(x[2],y[2],z[2],k1[2],k2[2]); 
 cha case4(x[3],y[3],z[3],k1[3],k2[3]); 
 cha case5(x[4],y[4],z[4],k1[4],k2[4]); 
 cha case6(x[5],y[5],z[5],k1[5],k2[5]); 
 cha case7(k2[0],k1[1],1'b0,o[1],k3[0]); 
 cha case8(k2[1],k1[2],k3[0],o[2],k3[1]); 
 cha case9(k2[2],k1[3],k3[1],o[3],k3[2]); 
 cha case10(k2[3],k1[4],k3[2],o[4],k3[3]); 
 cha case11(k2[4],k1[5],k3[3],o[5],k3[4]); 
 cha case12(k2[5],1'b0,k3[4],o[6],k3[5]); 
 assign o[0]=k1[0]; 
endmodule 

//module 4 

module cha(a,b,cin,sum,carry); 
input a,b,cin; 
output sum,carry; 
assign sum=a^b^cin; 
assign carry=(a&b)|(cin&b)|(a&cin); 
endmodule
